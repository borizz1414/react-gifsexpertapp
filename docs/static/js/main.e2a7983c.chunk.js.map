{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","console","log","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","href","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAkB5C,OACI,sBAAMC,SAXO,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAmBO,OACrCN,EAAc,MAKd,SACI,uBACIO,YAAY,YACZC,KAAK,OACLC,MAAOV,EACPW,SArBU,SAACR,GACvBS,QAAQC,IAAIV,EAAEW,OAAOJ,OACrBT,EAAcE,EAAEW,OAAOJ,a,+BCLdK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATtB,kBAaZM,GAbY,4CAAH,sDCDPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGlC,OACI,sBAAKc,UAAU,gDAAf,UACI,qBAAMC,IAAKf,EAAKgB,IAAKN,IACrB,4BAAIA,QCDHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECHX,SAACA,GAAa,IAAD,EACXjB,mBAAS,CAC/BwB,KAAK,GACLa,SAAQ,IAHyB,mBAC9BC,EAD8B,KACvBC,EADuB,KAiBrC,OAZFC,qBAAU,WACJxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGtB,CAACpB,IAIIqB,EDZwBK,CAAa1B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QASpB,OAAQ,qCACA,6BAAKpB,IACJoB,GAAW,wCAChB,qBAAKJ,UAAU,YAAf,SAGYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEQtBgB,EA7BM,WAAM,MAGa5C,mBAAS,CAAC,cAHvB,mBAGhB6C,EAHgB,KAGJ9C,EAHI,KASvB,OAAQ,qCACJ,iDACA,4DACA,oBAAGkC,UAAU,WAAb,mCAA8C,mBAAGa,KAAK,uBAAR,yBAE9C,cAAC,EAAD,CAAa/C,cAAeA,IAC5B,uBACA,6BAEQ8C,EAAWnB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCjBzB8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.e2a7983c.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setCategories}) => {\r\nconst [inputValue, setinputValue] = useState('')\r\n\r\nconst handleInputChange = (e) =>{\r\n    console.log(e.target.value)\r\n    setinputValue(e.target.value)\r\n}\r\n\r\nconst handleSubmit = (e) =>{\r\n    e.preventDefault()\r\n\r\n    if(inputValue.trim().length > 2){\r\n\r\n        setCategories(cats => [inputValue,...cats]);\r\n        setinputValue('');\r\n    }\r\n\r\n}\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                placeholder=\"Buscar...\"\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async (category) =>{\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=Wvl4CytiZSGkemY2ft9AW5GRZdITfIFF`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeInDownBig'>\r\n            <img  src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n// import {useState, useEffect} from 'react'\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    // const [images, setImages] = useState([])\r\n    // useEffect(()=>{\r\n    //     getGifs(category)\r\n    //         .then(setImages)\r\n    // },[category])\r\n    \r\n    // getGifs()\r\n    return (<>\r\n            <h3>{category}</h3>\r\n            {loading && <p>Loading</p>}\r\n        <div className='card-grid'>\r\n         \r\n                {\r\n                    images.map(img=>(\r\n                        <GifGridItem \r\n                            key={img.id}\r\n                            {...img}\r\n                            />\r\n                    ))\r\n                   \r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","\r\nimport {useState, useEffect} from 'react'\r\nimport {getGifs} from '../helpers/getGifs'\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n  useEffect(()=>{\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                })\r\n            })\r\n    },[category])\r\n\r\n\r\n\r\n    return state;\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = ['One', 'Two', 'Three'];\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n\r\n    // const handleAdd = () => {\r\n    //     // setCategories([...categories, 'Hulk']);\r\n    //     setCategories(cats => [...categories, 'Huld']);\r\n    // }\r\n    return (<>\r\n        <h1>Gifs Expert App</h1>\r\n        <h4>Encuentra todo tipo de Gif</h4>\r\n        <p className=\"subtitle\">Practicando con react <a href=\"https://borisdev.com\">Borisdev</a></p>\r\n        \r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />\r\n        <ol>\r\n            {\r\n                categories.map(category => (\r\n                    <GifGrid \r\n                    key={category}\r\n                    category={category}/>\r\n                ))\r\n            }\r\n        </ol>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp' \n\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}